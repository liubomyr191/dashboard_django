dist: xenial

services:
  - postgresql

language: python

cache: pip

sudo: true

addons:
  chrome: stable
  hosts:
    - localhost
    - 127.0.0.1

matrix:
  fast_finish: true
  include:

  - env: TOX_ENV=py36-django22
    python: 3.6
  - env: TOX_ENV=py37-django22
    python: 3.7
  - env: TOX_ENV=py38-django22
    python: 3.8
  - env: TOX_ENV=py39-django22
    python: 3.9

  - env: TOX_ENV=py36-django30
    python: 3.6
  - env: TOX_ENV=py37-django30
    python: 3.7
  - env: TOX_ENV=py38-django30
    python: 3.8
  - env: TOX_ENV=py39-django30
    python: 3.9

  - env: TOX_ENV=py36-django31
    python: 3.6
  - env: TOX_ENV=py37-django31
    python: 3.7
  - env: TOX_ENV=py38-django31
    python: 3.8
  - env: TOX_ENV=py39-django31
    python: 3.9

before_install:
  - sudo apt-get install -y xvfb libappindicator1 fonts-liberation
#  - wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
#  - sudo dpkg -i google-chrome*.deb
#  - wget http://ftp.us.debian.org/debian/pool/main/c/chromium/chromium_75.0.3770.90-1_amd64.deb
#  - sudo dpkg -i chromium_75.0.3770.90-1_amd64.deb

install:
  - wget https://chromedriver.storage.googleapis.com/89.0.4389.23/chromedriver_linux64.zip
#  - wget https://chromedriver.storage.googleapis.com/81.0.4044.69/chromedriver_linux64.zip
#  - wget https://chromedriver.storage.googleapis.com/79.0.3945.36/chromedriver_linux64.zip
#  - wget http://chromedriver.storage.googleapis.com/75.0.3770.90/chromedriver_linux64.zip
#  - wget http://chromedriver.storage.googleapis.com/74.0.3729.6/chromedriver_linux64.zip
  - unzip chromedriver_linux64.zip -d /home/travis/
  - pip install -r examples/requirements/test.txt
  - mkdir examples/logs
  - mkdir examples/media
  - mkdir examples/media/static

before_script:
  - export CHROME_BIN=/home/travis/chromedriver
  - psql -c 'create database dash_test;' -U postgres
  - sleep 2

script: travis_retry tox -e $TOX_ENV

after_success:
  - pip install coveralls
  - coveralls


#language: python
#
## Python versions
#python:
#  - "2.6"
#  - "2.7"
#  - "3.3"
#
## Environments
#env:
#  - DJANGO15=true
#  - DJANGO16=true
#
## Command to install dependencies
#install:
#  - pip install -r examples/requirements.txt
#  - python setup.py install
#  - if [[ $TRAVIS_PYTHON_VERSION == '2.6' && $DJANGO15 == true ]]; then pip uninstall Django -y; fi
#  - if [[ $TRAVIS_PYTHON_VERSION == '2.6' && $DJANGO15 == true ]]; then pip install Django==1.5.5; fi
#  - if [[ $TRAVIS_PYTHON_VERSION == '2.6' && $DJANGO16 == true ]]; then pip uninstall Django -y; fi
#  - if [[ $TRAVIS_PYTHON_VERSION == '2.6' && $DJANGO16 == true ]]; then pip install Django==1.6; fi
#  - if [[ $TRAVIS_PYTHON_VERSION == '2.7' && $DJANGO15 == true ]]; then pip uninstall Django -y; fi
#  - if [[ $TRAVIS_PYTHON_VERSION == '2.7' && $DJANGO15 == true ]]; then pip install Django==1.5.5; fi
#  - if [[ $TRAVIS_PYTHON_VERSION == '2.7' && $DJANGO16 == true ]]; then pip uninstall Django -y; fi
#  - if [[ $TRAVIS_PYTHON_VERSION == '2.7' && $DJANGO16 == true ]]; then pip install Django==1.6; fi
#  #- if [[ $TRAVIS_PYTHON_VERSION == '3.3' ]]; then pip uninstall django-localeurl -y; fi
#  - if [[ $TRAVIS_PYTHON_VERSION == '3.3' ]]; then pip install -r examples/requirements3.txt; fi
#  - if [[ $TRAVIS_PYTHON_VERSION == '3.3' && $DJANGO15 == true ]]; then pip uninstall Django -y; fi
#  - if [[ $TRAVIS_PYTHON_VERSION == '3.3' && $DJANGO15 == true ]]; then pip install Django==1.5.5; fi
#  - if [[ $TRAVIS_PYTHON_VERSION == '3.3' && $DJANGO16 == true ]]; then pip uninstall Django -y; fi
#  - if [[ $TRAVIS_PYTHON_VERSION == '3.3' && $DJANGO16 == true ]]; then pip install Django==1.6; fi
#  - mkdir examples/logs
#  - mkdir examples/media
#  - mkdir examples/media/static
#  - python examples/example/manage.py syncdb --noinput
#script:
#  - python examples/example/manage.py test dash
